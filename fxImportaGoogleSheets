let 
Funcao =
    (
      Link as text, 
      LinkRelativo as text, 
      NomePlanilha as text, 
      TipoObjeto as number
    ) =>
      let
        Format = "/export?format=xlsx",
        

    /*----------VARIAVEIS PARA AUDITORIA--------------
        TipoObjeto = 1,
        Link = "https://docs.google.com",
        LinkRelativo = "/"&"spreadsheets/d/1aN6kRNb2mekCyDXrOKj0O7eT14J8seApyZ5V0uuccJU"& "/export?format=xlsx",
        NomePlanilha = "SACOLAS",
    */
        
        
    /*-------------FUNCAO PRONTA-----------\-------*/
        Objeto = if TipoObjeto = 1 then "Table" else "Sheet",
        LinkRelativoB = Web.Contents(Link, [RelativePath = LinkRelativo]),
        LinkDireto = Web.Contents(Link & "/" & LinkRelativo & Format),
        Excel = try
          Excel.Workbook(LinkRelativoB, null, true)
        otherwise
          Excel.Workbook(LinkDireto, null, true),
        TableSelecionada = try

            let
              TabelaSelecionada = Table.SelectRows(
                Excel,
                each ([Kind] = Objeto) and ([Item] = NomePlanilha)
              )[Data]{0},
              RemoverLinhasEmBranco = Table.SelectRows(
                TabelaSelecionada,
                each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {"", null}))
              )
            in
              RemoverLinhasEmBranco
        otherwise
          Table.FromRecords({[ERRO = "ARQUIVO NÃO ENCONTRADO"]}),
        SheetSelecionada = try

            let
              TabelaSelecionada = Table.SelectRows(
                Excel,
                each ([Kind] = Objeto) and ([Item] = NomePlanilha)
              )[Data]{0},
              RemoverLinhasEmBranco = Table.SelectRows(
                TabelaSelecionada,
                each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {"", null}))
              ),
              CabecalhosPromovidos = Table.PromoteHeaders(
                RemoverLinhasEmBranco,
                [PromoteAllScalars = true]
              )
            in
              CabecalhosPromovidos
        otherwise
          Table.FromRecords({[ERRO = "ARQUIVO NÃO ENCONTRADO"]}),
        Final = if Objeto = "Table" then TableSelecionada else SheetSelecionada
      in
        Final,


metadados = [
                Documentation.Name  = "Função que importa uma planilha do google sheets",
                Documentation.Description = "Use essa função para importar um arquivo do google sheets.Tipo de Objeto 1 = Table | Tipo de Objeto 2 = Sheet"
                /*Documentation.Examples = {

                    // exemplo 01
                    [
                        Description = "descricao do exemplo 1",
                        Code = "funcao(2,3)",
                        Result = "5"
                    ],

                    // exemplo 02
                    [
                        Description = "descricao do exemplo 2",
                        Code = "funcao(2,3)",
                        Result = "5"
                    ]                    
                }*/
            ] 



in 
   Value.ReplaceType(
        Funcao,
        Value.ReplaceMetadata(
            Value.Type(Funcao),metadados
        )
    )
